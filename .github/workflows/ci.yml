name: CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  # ubuntu-18.04 is used as it is the latest fully supported base OS
  # right now.
  # See https://github.com/actions/virtual-environments#available-environments
  pr_presubmit:
    runs-on: ubuntu-18.04
    container:
      image: "python:3.5-buster"

    steps:
    - uses: actions/checkout@v2
    - name: install dependencies
      run: ./kokoro/rodete/fetch_dependencies.sh
    - name: setup build directory
      run: meson build
    - name: build
      run: ninja -C build
    - name: test
      run: meson test -C build
    - name: install
      run: |
        DESTDIR=out meson install -C build
        find build/out/
        test -x build/out/usr/local/bin/glome
        test -x build/out/usr/local/sbin/glome-login
        test -f build/out/usr/local/etc/glome/config
        test -f build/out/usr/local/include/glome.h
        # Dereference the library and check that it points to a valid file.
        test -f build/out/usr/local/lib/x86_64-linux-gnu/libglome.so

  pr_code_format:
    runs-on: ubuntu-18.04
    container:
      # Use Ubuntu 20.04 for a newer clang-format
      image: "ubuntu:20.04"
    steps:
    - uses: actions/checkout@v2
    - name: install dependencies
      run: |
        export DEBIAN_FRONTEND=noninteractive
        apt-get update
        apt-get install -y clang-format
    - name: check libglome format
      run: |
        clang-format --Werror --dry-run --style=google \
          glome.c glome.h glome_test.c
    - name: check glome-cli format
      run: |
        clang-format --Werror --dry-run --style=google \
          cli/*.c cli/*.h
    - name: check glome-login format
      run: |
        clang-format --Werror --dry-run --style=google \
          login/config.c login/crypto.c login/crypto_test.c login/lockdown.c \
          login/login.c login/login_test.c login/main.c login/ui.c \
          login/base64.h login/config.h login/crypto.h login/lockdown.h \
          login/login.h login/ui.h

  python_presubmit:
    runs-on: ubuntu-18.04
    container:
      image: "python:3.6-buster"

    steps:
    - uses: actions/checkout@v2
    - name: install dependencies from PyPI
      run: python -m pip install cryptography yapf pylint
    - name: run yapf test
      run: yapf -d --style google python/pyglome/*.py python/test/*.py
    - name: run pylint test
      run: pylint python/pyglome/*.py
    - name: run unit tests
      run: |
        cd python
        python -m test

  pr_java_test:
    runs-on: ubuntu-18.04
    container:
      image: "maven:3.6.3-jdk-8"
    steps:
    - uses: actions/checkout@v2
    - name: run linter and test java
      run: |
        mvn compile
        mvn test

  golang_presubmit:
    runs-on: ubuntu-18.04
    container:
      image: "golang:1.15.1-buster"
    steps:
    - uses: actions/checkout@v2
    - name: install dependencies from go get
      run: |
        go get -u golang.org/x/lint/golint
        go get -u golang.org/x/crypto/curve25519
    - name: run gofmt test
      run: |
        gofmt -d go/glome/*.go
        gofmt -d go/login/server/*.go
    - name: run golint test
      run: |
        golint go/glome/*.go
        golint go/login/server/*.go
    - name: run glome unit tests
      run: |
        cd go/glome
        go test
    - name: run login-server unit tests
      run: |
        cd go/login/server
        go test
